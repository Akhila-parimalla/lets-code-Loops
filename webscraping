from typing import Text
import requests
from bs4 import BeautifulStoneSoup
import pandas
import argparse
import connect

parser= argparse.ArgumentParser()
parser.add_argument("__pagenum_max",help="Enter the number of pages to parse", type=int)
parser.add_argument("__dbname,help=Enter the name of db", type=str)
args=arser.parse_args()

oyo_url="https://www.oyorooms.com/hotls-in-banglore/?pages"
page_num_Max=args.page_num_Max)
scraped_info_list=[]
connect.connect(args.dbname)


for page_num in range(1,page_num_Max):
    url=oyo_yurl+str(page_num)
    print("Get Request for: "+ url)
    req=requests.get(url)
    content=req.content

    soup=Beautifulsoup(content,"html.parser")

     all hotels=soup.find_all{"div",{"class":"hotelcardListing"})
     scraped_info_list=[]

        for hotel in all_hotels:
            hotel_dict={}
            hotel_name=hotel.find("h3",{"class": "listingHotelDescription_hotelName"}).text
            hotel_address=hotel.find("span",{"itemprop":"streetAdress"}).text
            hotel_price=hotel.find("span",{"class": "listingPrice_finalPrice"}).text
            #try
            try:
                hotel_rating=hotel.find("span",{"class": "hotelRatingratingSummary"}).text
            except AttributeError:
                hotel_dict["rating"]=None
            parent_amenities_element - hotel.find("div,"{"class": "amenityWrapper"})

            amenities_list=[]
            for amenity in parent_amenities_element.find_all("div",{"class": "amenityWrapper_amenity"}):
                amenities_list.append(ammenity.find("span:", {"class": {"class": "d-body-sm"}).text.strip())

            hotel_dict["amenities"] =', '.join(amentities_list[:-1])

            scraped_info_list.append(hotel_dict)
            connect.insert_info_table(args.dbname,tuple(hotel_dict.values()))

dataframe= pandas.Dataframe(scrapped_info_list)
print("Creating csv file...")
dataFrame.to_csv("Oyo.csv")
connect.get_hotel_info(args.dbname)
